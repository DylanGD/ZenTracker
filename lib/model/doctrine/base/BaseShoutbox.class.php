<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Shoutbox', 'doctrine');

/**
 * BaseShoutbox
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $author
 * @property string $description
 * @property string $link
 * @property boolean $system
 * @property Users $Users
 * @property Doctrine_Collection $ShoutboxComs
 * 
 * @method integer             getAuthor()       Returns the current record's "author" value
 * @method string              getDescription()  Returns the current record's "description" value
 * @method string              getLink()         Returns the current record's "link" value
 * @method boolean             getSystem()       Returns the current record's "system" value
 * @method Users               getUsers()        Returns the current record's "Users" value
 * @method Doctrine_Collection getShoutboxComs() Returns the current record's "ShoutboxComs" collection
 * @method Shoutbox            setAuthor()       Sets the current record's "author" value
 * @method Shoutbox            setDescription()  Sets the current record's "description" value
 * @method Shoutbox            setLink()         Sets the current record's "link" value
 * @method Shoutbox            setSystem()       Sets the current record's "system" value
 * @method Shoutbox            setUsers()        Sets the current record's "Users" value
 * @method Shoutbox            setShoutboxComs() Sets the current record's "ShoutboxComs" collection
 * 
 * @package    zt2
 * @subpackage model
 * @author     Optix
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShoutbox extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shoutbox');
        $this->hasColumn('author', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('link', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('system', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'author',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('ShoutboxComs', array(
             'local' => 'id',
             'foreign' => 'shtid'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}