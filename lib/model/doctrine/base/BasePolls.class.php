<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Polls', 'doctrine');

/**
 * BasePolls
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property boolean $multiple
 * @property Doctrine_Collection $PollChoices
 * @property Doctrine_Collection $PollComs
 * 
 * @method string              getTitle()       Returns the current record's "title" value
 * @method boolean             getMultiple()    Returns the current record's "multiple" value
 * @method Doctrine_Collection getPollChoices() Returns the current record's "PollChoices" collection
 * @method Doctrine_Collection getPollComs()    Returns the current record's "PollComs" collection
 * @method Polls               setTitle()       Sets the current record's "title" value
 * @method Polls               setMultiple()    Sets the current record's "multiple" value
 * @method Polls               setPollChoices() Sets the current record's "PollChoices" collection
 * @method Polls               setPollComs()    Sets the current record's "PollComs" collection
 * 
 * @package    zt2
 * @subpackage model
 * @author     Optix
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePolls extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('poll_polls');
        $this->hasColumn('title', 'string', 140, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 140,
             ));
        $this->hasColumn('multiple', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PollChoices', array(
             'local' => 'id',
             'foreign' => 'poll'));

        $this->hasMany('PollComs', array(
             'local' => 'id',
             'foreign' => 'pollid'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($sluggable0);
    }
}