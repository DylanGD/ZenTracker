<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TorrentsPeers', 'doctrine');

/**
 * BaseTorrentsPeers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $hash
 * @property string $pid
 * @property string $peer_id
 * @property integer $uid
 * @property string $ip
 * @property integer $port
 * @property integer $download
 * @property integer $upload
 * @property integer $remain
 * @property string $useragent
 * @property Users $Users
 * @property Uploads $Uploads
 * 
 * @method string        getHash()      Returns the current record's "hash" value
 * @method string        getPid()       Returns the current record's "pid" value
 * @method string        getPeerId()    Returns the current record's "peer_id" value
 * @method integer       getUid()       Returns the current record's "uid" value
 * @method string        getIp()        Returns the current record's "ip" value
 * @method integer       getPort()      Returns the current record's "port" value
 * @method integer       getDownload()  Returns the current record's "download" value
 * @method integer       getUpload()    Returns the current record's "upload" value
 * @method integer       getRemain()    Returns the current record's "remain" value
 * @method string        getUseragent() Returns the current record's "useragent" value
 * @method Users         getUsers()     Returns the current record's "Users" value
 * @method Uploads       getUploads()   Returns the current record's "Uploads" value
 * @method TorrentsPeers setHash()      Sets the current record's "hash" value
 * @method TorrentsPeers setPid()       Sets the current record's "pid" value
 * @method TorrentsPeers setPeerId()    Sets the current record's "peer_id" value
 * @method TorrentsPeers setUid()       Sets the current record's "uid" value
 * @method TorrentsPeers setIp()        Sets the current record's "ip" value
 * @method TorrentsPeers setPort()      Sets the current record's "port" value
 * @method TorrentsPeers setDownload()  Sets the current record's "download" value
 * @method TorrentsPeers setUpload()    Sets the current record's "upload" value
 * @method TorrentsPeers setRemain()    Sets the current record's "remain" value
 * @method TorrentsPeers setUseragent() Sets the current record's "useragent" value
 * @method TorrentsPeers setUsers()     Sets the current record's "Users" value
 * @method TorrentsPeers setUploads()   Sets the current record's "Uploads" value
 * 
 * @package    zt2
 * @subpackage model
 * @author     Optix
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTorrentsPeers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('torrents_peers');
        $this->hasColumn('hash', 'string', 40, array(
             'type' => 'string',
             'fixed' => 1,
             'primary' => true,
             'length' => 40,
             ));
        $this->hasColumn('pid', 'string', 40, array(
             'type' => 'string',
             'fixed' => 1,
             'primary' => true,
             'length' => 40,
             ));
        $this->hasColumn('peer_id', 'string', 40, array(
             'type' => 'string',
             'fixed' => 1,
             'notnull' => true,
             'length' => 40,
             ));
        $this->hasColumn('uid', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ip', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('port', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('download', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('upload', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('remain', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('useragent', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'uid',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Uploads', array(
             'local' => 'hash',
             'foreign' => 'hash',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}