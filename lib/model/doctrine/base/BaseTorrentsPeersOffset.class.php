<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TorrentsPeersOffset', 'doctrine');

/**
 * BaseTorrentsPeersOffset
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $hash
 * @property string $pid
 * @property integer $download
 * @property integer $upload
 * @property Users $Users
 * @property Uploads $Uploads
 * 
 * @method string              getHash()     Returns the current record's "hash" value
 * @method string              getPid()      Returns the current record's "pid" value
 * @method integer             getDownload() Returns the current record's "download" value
 * @method integer             getUpload()   Returns the current record's "upload" value
 * @method Users               getUsers()    Returns the current record's "Users" value
 * @method Uploads             getUploads()  Returns the current record's "Uploads" value
 * @method TorrentsPeersOffset setHash()     Sets the current record's "hash" value
 * @method TorrentsPeersOffset setPid()      Sets the current record's "pid" value
 * @method TorrentsPeersOffset setDownload() Sets the current record's "download" value
 * @method TorrentsPeersOffset setUpload()   Sets the current record's "upload" value
 * @method TorrentsPeersOffset setUsers()    Sets the current record's "Users" value
 * @method TorrentsPeersOffset setUploads()  Sets the current record's "Uploads" value
 * 
 * @package    zt2
 * @subpackage model
 * @author     Optix
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTorrentsPeersOffset extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('torrents_peers_offset');
        $this->hasColumn('hash', 'string', 40, array(
             'type' => 'string',
             'fixed' => 1,
             'primary' => true,
             'length' => 40,
             ));
        $this->hasColumn('pid', 'string', 40, array(
             'type' => 'string',
             'fixed' => 1,
             'primary' => true,
             'length' => 40,
             ));
        $this->hasColumn('download', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('upload', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'pid',
             'foreign' => 'pid',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Uploads', array(
             'local' => 'hash',
             'foreign' => 'hash',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}