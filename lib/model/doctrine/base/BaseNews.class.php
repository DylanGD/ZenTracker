<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('News', 'doctrine');

/**
 * BaseNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $description
 * @property integer $author
 * @property Users $Users
 * @property Doctrine_Collection $NewsComs
 * 
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getAuthor()      Returns the current record's "author" value
 * @method Users               getUsers()       Returns the current record's "Users" value
 * @method Doctrine_Collection getNewsComs()    Returns the current record's "NewsComs" collection
 * @method News                setTitle()       Sets the current record's "title" value
 * @method News                setDescription() Sets the current record's "description" value
 * @method News                setAuthor()      Sets the current record's "author" value
 * @method News                setUsers()       Sets the current record's "Users" value
 * @method News                setNewsComs()    Sets the current record's "NewsComs" collection
 * 
 * @package    zt2
 * @subpackage model
 * @author     Optix
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNews extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('news');
        $this->hasColumn('title', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 60,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('author', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'author',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('NewsComs', array(
             'local' => 'id',
             'foreign' => 'nwsid'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($sluggable0);
    }
}