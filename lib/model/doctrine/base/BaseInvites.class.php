<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Invites', 'doctrine');

/**
 * BaseInvites
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $uid
 * @property string $code
 * @property datetime $expire
 * @property boolean $multiple
 * @property Users $Users
 * 
 * @method integer  getUid()      Returns the current record's "uid" value
 * @method string   getCode()     Returns the current record's "code" value
 * @method datetime getExpire()   Returns the current record's "expire" value
 * @method boolean  getMultiple() Returns the current record's "multiple" value
 * @method Users    getUsers()    Returns the current record's "Users" value
 * @method Invites  setUid()      Sets the current record's "uid" value
 * @method Invites  setCode()     Sets the current record's "code" value
 * @method Invites  setExpire()   Sets the current record's "expire" value
 * @method Invites  setMultiple() Sets the current record's "multiple" value
 * @method Invites  setUsers()    Sets the current record's "Users" value
 * 
 * @package    zt2
 * @subpackage model
 * @author     Optix
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvites extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('invites');
        $this->hasColumn('uid', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('code', 'string', 10, array(
             'type' => 'string',
             'primary' => true,
             'length' => 10,
             ));
        $this->hasColumn('expire', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));
        $this->hasColumn('multiple', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'uid',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}